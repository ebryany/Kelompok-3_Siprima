/*
 * SIPRIMA Desa Tarabbi - Form Detail Aduan
 * Sistem Pengaduan Masyarakat Desa Tarabbi
 */
package aduan;

import Utils.DatabaseConfig;
import Utils.SessionManager;
import Utils.ComplaintEventManager;
import models.User;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 * @author febry
 */
public class FormDetailAduan extends javax.swing.JFrame {
    
    // SIPRIMA Official Colors
    private static final Color PRIMARY_BLUE = new Color(41, 128, 185);         // #2980B9
    private static final Color PRIMARY_GREEN = new Color(39, 174, 96);         // #27AE60
    private static final Color SECONDARY_ORANGE = new Color(230, 126, 34);     // #E67E22
    private static final Color ERROR_COLOR = new Color(231, 76, 60);           // #E74C3C
    private static final Color SUCCESS_COLOR = new Color(46, 204, 113);        // #2ECC71
    private static final Color WARNING_COLOR = new Color(243, 156, 18);        // #F39C12
    private static final Color TEXT_PRIMARY = new Color(44, 62, 80);           // #2C3E50
    private static final Color TEXT_SECONDARY = new Color(127, 140, 141);      // #7F8C8D
    private static final Color BORDER_COLOR = new Color(220, 221, 225);        // #DCDDE1
    private static final Color BG_PRIMARY = new Color(236, 240, 241);          // #ECF0F1
    
    private User currentUser;
    private int complaintId;
    private String complaintNumber;
    private String currentStatus;
    private String currentPriority;

    /**
     * Creates new form FormDetailAduan
     */
    public FormDetailAduan() {
        this(null, 0);
    }
    
    /**
     * Creates new form with complaint number
     */
    public FormDetailAduan(String complaintNumber) {
        this.complaintNumber = complaintNumber;
        this.currentUser = SessionManager.getInstance().getCurrentUser();
        initComponents();
        setupEventHandlers();
        setupWindowProperties();
        customizeModernComponents();
        loadComplaintDetailsByNumber();
    }
    
    /**
     * Creates new form with complaint context
     */
    public FormDetailAduan(User user, int complaintId) {
        this.currentUser = user;
        this.complaintId = complaintId;
        initComponents();
        setupEventHandlers();
        setupWindowProperties();
        customizeModernComponents();
        loadComplaintDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        contentScrollPane = new javax.swing.JScrollPane();
        mainContentPanel = new javax.swing.JPanel();
        detailPanel = new javax.swing.JPanel();
        detailTitleLabel = new javax.swing.JLabel();
        aduanIdLabel = new javax.swing.JLabel();
        statusPanel = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        reporterSectionLabel = new javax.swing.JLabel();
        reporterInfoPanel = new javax.swing.JPanel();
        lblNamaLengkap = new javax.swing.JLabel();
        lblNIK = new javax.swing.JLabel();
        lblNoHP = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblAlamat = new javax.swing.JLabel();
        aduanSectionLabel = new javax.swing.JLabel();
        aduanInfoPanel = new javax.swing.JPanel();
        lblKategori = new javax.swing.JLabel();
        lblPrioritas = new javax.swing.JLabel();
        lblLokasiKejadian = new javax.swing.JLabel();
        lblJudulAduan = new javax.swing.JLabel();
        lblDeskripsi = new javax.swing.JLabel();
        lblTanggalDibuat = new javax.swing.JLabel();
        timelineLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        timelinePanel = new javax.swing.JPanel();
        attachmentLabel = new javax.swing.JLabel();
        attachmentPanel = new javax.swing.JPanel();
        lblAttachment = new javax.swing.JLabel();
        responseLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResponse = new javax.swing.JTextArea();
        actionPanel = new javax.swing.JPanel();
        btnUpdateStatus = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnSaveResponse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIPRIMA - Detail Aduan");

        headerPanel.setBackground(new java.awt.Color(41, 128, 185));
        headerPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 30, 20, 30));
        headerPanel.setPreferredSize(new java.awt.Dimension(900, 80));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(41, 128, 185));
        btnBack.setText("< Kembali");
        btnBack.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 16, 8, 16));
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setFocusPainted(false);

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("DETAIL ADUAN");

        btnEdit.setBackground(new java.awt.Color(230, 126, 34));
        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Edit");
        btnEdit.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 12, 6, 12));
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.setFocusPainted(false);

        btnDelete.setBackground(new java.awt.Color(231, 76, 60));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Hapus");
        btnDelete.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 12, 6, 12));
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setFocusPainted(false);

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
        );

        mainContentPanel.setBackground(new java.awt.Color(236, 240, 241));
        mainContentPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(30, 50, 30, 50));

        detailPanel.setBackground(new java.awt.Color(255, 255, 255));
        detailPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(220, 221, 225)), javax.swing.BorderFactory.createEmptyBorder(40, 40, 40, 40)));
        detailPanel.setPreferredSize(new java.awt.Dimension(800, 1200));

        detailTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        detailTitleLabel.setForeground(new java.awt.Color(41, 128, 185));
        detailTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        detailTitleLabel.setText("DETAIL ADUAN MASYARAKAT");

        aduanIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        aduanIdLabel.setForeground(new java.awt.Color(127, 140, 141));
        aduanIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aduanIdLabel.setText("ID Aduan: ADU-001");

        statusPanel.setBackground(new java.awt.Color(255, 255, 255));

        statusLabel.setBackground(new java.awt.Color(51, 220, 220));
        statusLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 255, 255));
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("PENDING");
        statusLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 16, 6, 16));
        statusLabel.setOpaque(true);

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        reporterSectionLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        reporterSectionLabel.setForeground(new java.awt.Color(41, 128, 185));
        reporterSectionLabel.setText("DATA PELAPOR");

        reporterInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        reporterInfoPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(220, 221, 225)), javax.swing.BorderFactory.createEmptyBorder(15, 20, 15, 20)));

        lblNamaLengkap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNamaLengkap.setText("Nama Lengkap: [Akan diisi dari database]");

        lblNIK.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNIK.setText("NIK: [Akan diisi dari database]");

        lblNoHP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNoHP.setText("No. HP: [Akan diisi dari database]");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("Email: [Akan diisi dari database]");

        lblAlamat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAlamat.setText("Alamat: [Akan diisi dari database]");

        javax.swing.GroupLayout reporterInfoPanelLayout = new javax.swing.GroupLayout(reporterInfoPanel);
        reporterInfoPanel.setLayout(reporterInfoPanelLayout);
        reporterInfoPanelLayout.setHorizontalGroup(
            reporterInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblNamaLengkap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblNIK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblNoHP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblAlamat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        reporterInfoPanelLayout.setVerticalGroup(
            reporterInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reporterInfoPanelLayout.createSequentialGroup()
                .addComponent(lblNamaLengkap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNIK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNoHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        aduanSectionLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        aduanSectionLabel.setForeground(new java.awt.Color(41, 128, 185));
        aduanSectionLabel.setText("DETAIL ADUAN");

        aduanInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        aduanInfoPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(220, 221, 225)), javax.swing.BorderFactory.createEmptyBorder(15, 20, 15, 20)));

        lblKategori.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblKategori.setText("Kategori: [Akan diisi dari database]");

        lblPrioritas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPrioritas.setText("Prioritas: [Akan diisi dari database]");

        lblLokasiKejadian.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblLokasiKejadian.setText("Lokasi Kejadian: [Akan diisi dari database]");

        lblJudulAduan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblJudulAduan.setText("Judul Aduan: [Akan diisi dari database]");

        lblDeskripsi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDeskripsi.setText("Deskripsi: [Akan diisi dari database]");

        lblTanggalDibuat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTanggalDibuat.setText("Tanggal Dibuat: [Akan diisi dari database]");

        javax.swing.GroupLayout aduanInfoPanelLayout = new javax.swing.GroupLayout(aduanInfoPanel);
        aduanInfoPanel.setLayout(aduanInfoPanelLayout);
        aduanInfoPanelLayout.setHorizontalGroup(
            aduanInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblKategori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblPrioritas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblLokasiKejadian, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblJudulAduan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblDeskripsi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblTanggalDibuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        aduanInfoPanelLayout.setVerticalGroup(
            aduanInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aduanInfoPanelLayout.createSequentialGroup()
                .addComponent(lblKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPrioritas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLokasiKejadian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblJudulAduan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDeskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTanggalDibuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        timelineLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        timelineLabel.setForeground(new java.awt.Color(41, 128, 185));
        timelineLabel.setText("TIMELINE ADUAN");

        timelinePanel.setBackground(new java.awt.Color(255, 255, 255));
        timelinePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        javax.swing.GroupLayout timelinePanelLayout = new javax.swing.GroupLayout(timelinePanel);
        timelinePanel.setLayout(timelinePanelLayout);
        timelinePanelLayout.setHorizontalGroup(
            timelinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 636, Short.MAX_VALUE)
        );
        timelinePanelLayout.setVerticalGroup(
            timelinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(timelinePanel);

        attachmentLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        attachmentLabel.setForeground(new java.awt.Color(41, 128, 185));
        attachmentLabel.setText("LAMPIRAN");

        attachmentPanel.setBackground(new java.awt.Color(255, 255, 255));
        attachmentPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(220, 221, 225)), javax.swing.BorderFactory.createEmptyBorder(15, 20, 15, 20)));
        attachmentPanel.setPreferredSize(new java.awt.Dimension(600, 60));

        lblAttachment.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAttachment.setForeground(new java.awt.Color(127, 140, 141));
        lblAttachment.setText("Belum ada lampiran");

        javax.swing.GroupLayout attachmentPanelLayout = new javax.swing.GroupLayout(attachmentPanel);
        attachmentPanel.setLayout(attachmentPanelLayout);
        attachmentPanelLayout.setHorizontalGroup(
            attachmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAttachment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        attachmentPanelLayout.setVerticalGroup(
            attachmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAttachment, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        responseLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        responseLabel.setForeground(new java.awt.Color(41, 128, 185));
        responseLabel.setText("TANGGAPAN");

        txtResponse.setColumns(20);
        txtResponse.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtResponse.setLineWrap(true);
        txtResponse.setRows(4);
        txtResponse.setText("Tambah tanggapan untuk aduan ini...");
        txtResponse.setWrapStyleWord(true);
        txtResponse.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jScrollPane2.setViewportView(txtResponse);

        actionPanel.setBackground(new java.awt.Color(255, 255, 255));

        btnUpdateStatus.setBackground(new java.awt.Color(51, 220, 220));
        btnUpdateStatus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdateStatus.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateStatus.setText("Update Status");
        btnUpdateStatus.setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 20, 12, 20));
        btnUpdateStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateStatus.setFocusPainted(false);

        btnPrint.setBackground(new java.awt.Color(127, 140, 141));
        btnPrint.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPrint.setForeground(new java.awt.Color(255, 255, 255));
        btnPrint.setText("Print");
        btnPrint.setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 20, 12, 20));
        btnPrint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrint.setFocusPainted(false);

        btnSaveResponse.setBackground(new java.awt.Color(39, 174, 96));
        btnSaveResponse.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSaveResponse.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveResponse.setText("Simpan Tanggapan");
        btnSaveResponse.setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 20, 12, 20));
        btnSaveResponse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSaveResponse.setFocusPainted(false);

        javax.swing.GroupLayout actionPanelLayout = new javax.swing.GroupLayout(actionPanel);
        actionPanel.setLayout(actionPanelLayout);
        actionPanelLayout.setHorizontalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionPanelLayout.createSequentialGroup()
                .addComponent(btnUpdateStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveResponse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        actionPanelLayout.setVerticalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnUpdateStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnSaveResponse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout detailPanelLayout = new javax.swing.GroupLayout(detailPanel);
        detailPanel.setLayout(detailPanelLayout);
        detailPanelLayout.setHorizontalGroup(
            detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(detailTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(aduanIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(reporterSectionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(reporterInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(aduanSectionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(aduanInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(timelineLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(attachmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(attachmentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(responseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(actionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        detailPanelLayout.setVerticalGroup(
            detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailPanelLayout.createSequentialGroup()
                .addComponent(detailTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aduanIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(reporterSectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reporterInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(aduanSectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aduanInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(timelineLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(attachmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attachmentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(responseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(actionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainContentPanelLayout = new javax.swing.GroupLayout(mainContentPanel);
        mainContentPanel.setLayout(mainContentPanelLayout);
        mainContentPanelLayout.setHorizontalGroup(
            mainContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContentPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(detailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainContentPanelLayout.setVerticalGroup(
            mainContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContentPanelLayout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        contentScrollPane.setViewportView(mainContentPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(contentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDetailAduan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDetailAduan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDetailAduan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDetailAduan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FormDetailAduan().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnDelete;
    private javax.swing.JScrollPane contentScrollPane;
    private javax.swing.JPanel mainContentPanel;
    private javax.swing.JPanel detailPanel;
    private javax.swing.JLabel detailTitleLabel;
    private javax.swing.JLabel aduanIdLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel reporterSectionLabel;
    private javax.swing.JPanel reporterInfoPanel;
    private javax.swing.JLabel lblNamaLengkap;
    private javax.swing.JLabel lblNIK;
    private javax.swing.JLabel lblNoHP;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblAlamat;
    private javax.swing.JLabel aduanSectionLabel;
    private javax.swing.JPanel aduanInfoPanel;
    private javax.swing.JLabel lblKategori;
    private javax.swing.JLabel lblPrioritas;
    private javax.swing.JLabel lblLokasiKejadian;
    private javax.swing.JLabel lblJudulAduan;
    private javax.swing.JLabel lblDeskripsi;
    private javax.swing.JLabel lblTanggalDibuat;
    private javax.swing.JLabel timelineLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel timelinePanel;
    private javax.swing.JLabel attachmentLabel;
    private javax.swing.JPanel attachmentPanel;
    private javax.swing.JLabel lblAttachment;
    private javax.swing.JLabel responseLabel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtResponse;
    private javax.swing.JPanel actionPanel;
    private javax.swing.JButton btnUpdateStatus;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSaveResponse;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Setup window properties
     */
    private void setupWindowProperties() {
        setTitle("SIPRIMA Desa Tarabbi - Detail Aduan");
        setLocationRelativeTo(null);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setMinimumSize(new Dimension(900, 700));
        setPreferredSize(new Dimension(1200, 800));
        pack();
    }
    
    /**
     * Customize components dengan SIPRIMA theme
     */
    private void customizeModernComponents() {
        // Header styling
        headerPanel.setBackground(PRIMARY_BLUE);
        
        // Title
        titleLabel.setText("👁️ DETAIL ADUAN");
        titleLabel.setFont(new Font("Segoe UI", Font.BOLD, 24));
        titleLabel.setForeground(Color.WHITE);
        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
        
        // Header buttons
        customizeHeaderButton(btnBack, "← Kembali");
        customizeHeaderButton(btnEdit, "📝 Edit");
        customizeHeaderButton(btnDelete, "🗑️ Hapus");
        
        // Main content
        mainContentPanel.setBackground(BG_PRIMARY);
        
        // Style detail panels
        styleDetailPanels();
        
        // Action buttons
        styleActionButtons();
    }
    
    private void styleDetailPanels() {
        // Style detail panel
        detailPanel.setBackground(Color.WHITE);
        
        // Style title
        detailTitleLabel.setFont(new Font("Segoe UI", Font.BOLD, 20));
        detailTitleLabel.setForeground(PRIMARY_BLUE);
        
        // Style ID label
        aduanIdLabel.setFont(new Font("Segoe UI", Font.BOLD, 14));
        aduanIdLabel.setForeground(TEXT_SECONDARY);
        
        // Style status label
        statusLabel.setOpaque(true);
        statusLabel.setFont(new Font("Segoe UI", Font.BOLD, 12));
        statusLabel.setForeground(Color.WHITE);
        
        // Style section labels
        reporterSectionLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
        reporterSectionLabel.setForeground(PRIMARY_BLUE);
        
        aduanSectionLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
        aduanSectionLabel.setForeground(PRIMARY_BLUE);
        
        timelineLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
        timelineLabel.setForeground(PRIMARY_BLUE);
        
        attachmentLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
        attachmentLabel.setForeground(PRIMARY_BLUE);
        
        responseLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
        responseLabel.setForeground(PRIMARY_BLUE);
        
        // Style info panels
        reporterInfoPanel.setBackground(Color.WHITE);
        aduanInfoPanel.setBackground(Color.WHITE);
        attachmentPanel.setBackground(Color.WHITE);
        
        // Style text area
        txtResponse.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        txtResponse.setLineWrap(true);
        txtResponse.setWrapStyleWord(true);
    }
    
    private void styleActionButtons() {
        // Style action buttons
        btnUpdateStatus.setBackground(PRIMARY_BLUE);
        btnUpdateStatus.setForeground(Color.WHITE);
        btnUpdateStatus.setFont(new Font("Segoe UI", Font.BOLD, 14));
        btnUpdateStatus.setFocusPainted(false);
        btnUpdateStatus.setCursor(new Cursor(Cursor.HAND_CURSOR));
        
        btnPrint.setBackground(TEXT_SECONDARY);
        btnPrint.setForeground(Color.WHITE);
        btnPrint.setFont(new Font("Segoe UI", Font.BOLD, 14));
        btnPrint.setFocusPainted(false);
        btnPrint.setCursor(new Cursor(Cursor.HAND_CURSOR));
        
        btnSaveResponse.setBackground(PRIMARY_GREEN);
        btnSaveResponse.setForeground(Color.WHITE);
        btnSaveResponse.setFont(new Font("Segoe UI", Font.BOLD, 14));
        btnSaveResponse.setFocusPainted(false);
        btnSaveResponse.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }
    
    
    private void customizeHeaderButton(JButton button, String text) {
        button.setText(text);
        button.setBackground(Color.WHITE);
        button.setForeground(PRIMARY_BLUE);
        button.setFont(new Font("Segoe UI", Font.BOLD, 14));
        button.setBorder(BorderFactory.createEmptyBorder(8, 16, 8, 16));
        button.setFocusPainted(false);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }
    
    
    
    
    
    /**
     * Load complaint details by complaint number
     */
    private void loadComplaintDetailsByNumber() {
        if (complaintNumber == null || complaintNumber.trim().isEmpty()) {
            // Load sample data for demo
            loadSampleData();
            return;
        }
        
        try {
            AduanService service = AduanService.getInstance();
            AduanService.AduanDTO aduan = service.getAduanByNumber(complaintNumber);
            
            if (aduan != null) {
                complaintId = aduan.getId(); // Store the ID for other operations
                populateComplaintDataFromDTO(aduan);
                loadStatusHistory();
                loadAttachments();
                setupHandlingAccess();
            } else {
                showError("Aduan dengan nomor " + complaintNumber + " tidak ditemukan");
                loadSampleData(); // Fallback to sample data
            }
            
        } catch (SQLException e) {
            System.err.println("Error loading complaint by number: " + e.getMessage());
            showError("Error memuat data aduan: " + e.getMessage());
            // Fallback to sample data
            loadSampleData();
        } catch (Exception e) {
            System.err.println("Unexpected error: " + e.getMessage());
            showError("Unexpected error: " + e.getMessage());
            loadSampleData();
        }
    }
    
    /**
     * Load complaint details dari database
     */
    private void loadComplaintDetails() {
        if (complaintId <= 0) {
            // Load sample data for demo
            loadSampleData();
            return;
        }
        
        try {
            Connection conn = DatabaseConfig.getConnection();
            
            // Check if we have the simplified complaints table structure
            String query = "SELECT c.* FROM complaints c WHERE c.id = ?";
                          
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setInt(1, complaintId);
                ResultSet rs = stmt.executeQuery();
                
                if (rs.next()) {
                    populateComplaintData(rs);
                    loadStatusHistory();
                    loadAttachments();
                } else {
                    showError("Aduan tidak ditemukan");
                }
            }
            
        } catch (SQLException e) {
            System.err.println("Error loading complaint: " + e.getMessage());
            showError("Error memuat data aduan: " + e.getMessage());
            // Fallback to sample data
            loadSampleData();
        }
    }
    
    private void loadSampleData() {
        // Sample data untuk demo
        aduanIdLabel.setText("ID Aduan: ADU-001");
        detailTitleLabel.setText("DETAIL ADUAN MASYARAKAT");
        statusLabel.setText("🆕 BARU");
        statusLabel.setBackground(PRIMARY_BLUE);
        
        // Reporter info
        lblNamaLengkap.setText("Nama Lengkap: Siti Aminah");
        lblNIK.setText("NIK: 1234567890123456");
        lblNoHP.setText("No. HP: 0812-3456-7890");
        lblEmail.setText("Email: siti@email.com");
        lblAlamat.setText("Alamat: Jl. Mawar Raya RT 02/01");
        
        // Complaint info
        lblKategori.setText("Kategori: Infrastruktur");
        lblPrioritas.setText("Prioritas: Darurat");
        lblLokasiKejadian.setText("Lokasi Kejadian: Jl. Mawar Raya");
        lblJudulAduan.setText("Judul Aduan: Jalan Rusak Parah");
        lblDeskripsi.setText("Deskripsi: Jalan rusak dengan lubang besar yang berbahaya");
        lblTanggalDibuat.setText("Tanggal Dibuat: 16 Jun 2025, 07:30 WIB");
        
        // Response area
        txtResponse.setText("Tambah tanggapan untuk aduan ini...");
        
        // Attachment
        lblAttachment.setText("Belum ada lampiran");
        
        currentStatus = "baru";
        currentPriority = "darurat";
        
        // Setup handling visibility based on user role
        setupHandlingAccess();
    }
    
    /**
     * Populate complaint data from DTO
     */
    private void populateComplaintDataFromDTO(AduanService.AduanDTO aduan) {
        aduanIdLabel.setText("ID Aduan: " + aduan.getComplaintNumber());
        updateStatusBadge(aduan.getStatus());
        
        // Reporter info
        lblNamaLengkap.setText("Nama Lengkap: " + aduan.getReporterName());
        lblNIK.setText("NIK: " + (aduan.getReporterNik() != null ? aduan.getReporterNik() : "-"));
        lblNoHP.setText("No. HP: " + (aduan.getReporterPhone() != null ? aduan.getReporterPhone() : "-"));
        lblEmail.setText("Email: " + (aduan.getReporterEmail() != null ? aduan.getReporterEmail() : "-"));
        lblAlamat.setText("Alamat: " + (aduan.getReporterAddress() != null ? aduan.getReporterAddress() : "-"));
        
        // Complaint info
        lblKategori.setText("Kategori: " + (aduan.getCategory() != null ? aduan.getCategory() : "-"));
        lblJudulAduan.setText("Judul Aduan: " + aduan.getTitle());
        lblLokasiKejadian.setText("Lokasi Kejadian: " + (aduan.getLocationAddress() != null ? aduan.getLocationAddress() : "-"));
        lblDeskripsi.setText("Deskripsi: " + (aduan.getDescription() != null ? aduan.getDescription() : "-"));
        lblPrioritas.setText("Prioritas: " + getPriorityDisplay(aduan.getPriority()));
        lblTanggalDibuat.setText("Tanggal Dibuat: " + aduan.getCreatedAt());
        
        currentStatus = aduan.getStatus();
        currentPriority = aduan.getPriority();
    }
    
    private void populateComplaintData(ResultSet rs) throws SQLException {
        // Populate UI with database data
        String complaintNumber = rs.getString("complaint_number");
        String title = rs.getString("title");
        String status = rs.getString("status");
        String priority = rs.getString("priority");
        
        aduanIdLabel.setText("ID Aduan: " + complaintNumber);
        updateStatusBadge(status);
        
        // Reporter info
        lblNamaLengkap.setText("Nama Lengkap: " + rs.getString("reporter_name"));
        lblNIK.setText("NIK: " + (rs.getString("reporter_nik") != null ? rs.getString("reporter_nik") : "-"));
        lblNoHP.setText("No. HP: " + (rs.getString("reporter_phone") != null ? rs.getString("reporter_phone") : "-"));
        lblEmail.setText("Email: " + rs.getString("reporter_email"));
        lblAlamat.setText("Alamat: " + (rs.getString("reporter_address") != null ? rs.getString("reporter_address") : "-"));
        
        // Complaint info
        lblKategori.setText("Kategori: " + (rs.getString("category") != null ? rs.getString("category") : "-"));
        lblJudulAduan.setText("Judul Aduan: " + title);
        lblLokasiKejadian.setText("Lokasi Kejadian: " + rs.getString("location_address"));
        lblDeskripsi.setText("Deskripsi: " + rs.getString("description"));
        lblPrioritas.setText("Prioritas: " + getPriorityDisplay(priority));
        lblTanggalDibuat.setText("Tanggal Dibuat: " + formatDateTime(rs.getTimestamp("created_at")));
        
        currentStatus = status;
        currentPriority = priority;
    }
    
    private void updateStatusBadge(String status) {
        Color statusColor;
        String statusText;
        
        switch (status.toLowerCase()) {
            case "baru":
                statusColor = PRIMARY_BLUE;
                statusText = "🆕 BARU";
                break;
            case "validasi":
                statusColor = WARNING_COLOR;
                statusText = "🔄 VALIDASI";
                break;
            case "proses":
                statusColor = SECONDARY_ORANGE;
                statusText = "⚙️ DIPROSES";
                break;
            case "selesai":
                statusColor = SUCCESS_COLOR;
                statusText = "✅ SELESAI";
                break;
            case "ditolak":
                statusColor = ERROR_COLOR;
                statusText = "❌ DITOLAK";
                break;
            default:
                statusColor = TEXT_SECONDARY;
                statusText = "❓ " + status.toUpperCase();
                break;
        }
        
        statusLabel.setText(statusText);
        statusLabel.setBackground(statusColor);
    }
    
    
    private void loadStatusHistory() {
        // Load status history from complaint_logs table
        // For demo, update timeline panel with sample history
        timelinePanel.removeAll();
        timelinePanel.setLayout(new BoxLayout(timelinePanel, BoxLayout.Y_AXIS));
        
        addHistoryItem("✅ 16 Jun 2025, 07:30 - Aduan diterima sistem");
        addHistoryItem("🔄 16 Jun 2025, 08:15 - Validasi admin");
        addHistoryItem("⏳ Menunggu penugasan petugas...");
        
        timelinePanel.revalidate();
        timelinePanel.repaint();
    }
    
    private void addHistoryItem(String text) {
        JLabel historyLabel = new JLabel(text);
        historyLabel.setFont(new Font("Segoe UI", Font.PLAIN, 12));
        historyLabel.setForeground(TEXT_SECONDARY);
        historyLabel.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
        timelinePanel.add(historyLabel);
    }
    
    private void loadAttachments() {
        // Load attachments from database
        // For demo, update attachment info
        lblAttachment.setText("🖼️ foto_jalan_rusak.jpg (2.1 MB) - 📄 surat_rt.pdf (856 KB)");
    }
    
    
    
    private void setupHandlingAccess() {
        // Show/hide components based on user role
        boolean canEdit = currentUser != null && 
                         (currentUser.getRole().equals("supervisor") || 
                          currentUser.getRole().equals("admin"));
                          
        btnEdit.setVisible(canEdit);
        btnDelete.setVisible(canEdit);
        
        // Show response area for staff
        boolean canRespond = currentUser != null && 
                           !currentUser.getRole().equals("masyarakat");
        txtResponse.setEditable(canRespond);
        btnSaveResponse.setVisible(canRespond);
    }
    
    /**
     * Setup event handlers
     */
    private void setupEventHandlers() {
        btnBack.addActionListener(e -> handleBack());
        btnEdit.addActionListener(e -> handleEdit());
        btnDelete.addActionListener(e -> handleDelete());
        
        btnUpdateStatus.addActionListener(e -> handleUpdateStatus());
        btnPrint.addActionListener(e -> handlePrint());
        btnSaveResponse.addActionListener(e -> handleSaveResponse());
    }
    
    private void handleBack() {
        this.dispose();
    }
    
    private void handleEdit() {
        // Open edit form
        JOptionPane.showMessageDialog(this,
            "📝 Fitur edit aduan akan membuka FormInputanAduan\ndengan data yang sudah terisi.",
            "Edit Aduan",
            JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void handleDelete() {
        int option = JOptionPane.showConfirmDialog(this,
            "Apakah Anda yakin ingin menghapus aduan ini?\n" +
            "Tindakan ini tidak dapat dibatalkan.",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);
            
        if (option == JOptionPane.YES_OPTION) {
            // Delete complaint
            JOptionPane.showMessageDialog(this,
                "✅ Aduan berhasil dihapus",
                "Sukses",
                JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }
    }
    
    private void handlePrint() {
        JOptionPane.showMessageDialog(this,
            "🖨️ Fitur print akan mencetak detail aduan ini",
            "Print Aduan",
            JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void handleSaveResponse() {
        String response = txtResponse.getText().trim();
        if (response.isEmpty() || response.equals("Tambah tanggapan untuk aduan ini...")) {
            JOptionPane.showMessageDialog(this,
                "Silakan masukkan tanggapan terlebih dahulu",
                "Validasi",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Save response to database
        try {
            if (complaintId > 0) {
                Connection conn = DatabaseConfig.getConnection();
                String query = "INSERT INTO complaint_responses (complaint_id, user_id, response, created_at) VALUES (?, ?, ?, NOW())";
                
                try (PreparedStatement stmt = conn.prepareStatement(query)) {
                    stmt.setInt(1, complaintId);
                    stmt.setInt(2, currentUser != null ? currentUser.getId() : 1);
                    stmt.setString(3, response);
                    stmt.executeUpdate();
                }
            }
            
            JOptionPane.showMessageDialog(this,
                "✅ Tanggapan berhasil disimpan",
                "Sukses",
                JOptionPane.INFORMATION_MESSAGE);
                
            txtResponse.setText("Tambah tanggapan untuk aduan ini...");
            
        } catch (SQLException e) {
            System.err.println("Error saving response: " + e.getMessage());
            showError("Error menyimpan tanggapan: " + e.getMessage());
        }
    }
    
    private void handleUpdateStatus() {
        String[] statuses = {"validasi", "proses", "selesai", "ditolak"};
        String newStatus = (String) JOptionPane.showInputDialog(this,
            "Pilih status baru:",
            "Update Status",
            JOptionPane.QUESTION_MESSAGE,
            null,
            statuses,
            currentStatus);
            
        if (newStatus != null && !newStatus.equals(currentStatus)) {
            updateComplaintStatus(newStatus);
        }
    }
    
    private void updateComplaintStatus(String newStatus) {
        try {
            if (complaintId > 0) {
                Connection conn = DatabaseConfig.getConnection();
                String query = "UPDATE complaints SET status = ?, updated_at = NOW() WHERE id = ?";
                
                try (PreparedStatement stmt = conn.prepareStatement(query)) {
                    stmt.setString(1, newStatus);
                    stmt.setInt(2, complaintId);
                    stmt.executeUpdate();
                }
            }
            
            String oldStatus = currentStatus;
            currentStatus = newStatus;
            updateStatusBadge(newStatus);
            loadStatusHistory(); // Refresh history
            
            // 🔥 FIRE REALTIME EVENT untuk Dashboard update
            String updatedBy = currentUser != null ? currentUser.getFullName() : "System";
            ComplaintEventManager.getInstance().fireStatusChanged(
                complaintNumber, oldStatus, newStatus, updatedBy
            );
            
            JOptionPane.showMessageDialog(this,
                "✅ Status aduan berhasil diupdate ke: " + newStatus.toUpperCase(),
                "Sukses",
                JOptionPane.INFORMATION_MESSAGE);
                
        } catch (SQLException e) {
            System.err.println("Error updating status: " + e.getMessage());
            showError("Error mengupdate status: " + e.getMessage());
        }
    }
    
    private String getPriorityDisplay(String priority) {
        if (priority == null) return "⚪ -";
        
        switch (priority.toLowerCase()) {
            case "rendah": return "🟢 Rendah";
            case "sedang": return "🟡 Sedang";
            case "tinggi": return "🟠 Tinggi";
            case "darurat": return "🔴 Darurat";
            default: return "⚪ " + priority;
        }
    }
    
    private String formatDateTime(Timestamp timestamp) {
        if (timestamp == null) return "-";
        
        LocalDateTime dateTime = timestamp.toLocalDateTime();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd MMM yyyy, HH:mm");
        return dateTime.format(formatter) + " WIB";
    }
    
    private void showError(String message) {
        JOptionPane.showMessageDialog(this,
            "❌ " + message,
            "Error",
            JOptionPane.ERROR_MESSAGE);
    }
}
